#!/bin/bash

clear
echo "üåê CONFIGURA√á√ÉO DE EXPOSI√á√ÉO P√öBLICA SEGURA"
echo "==========================================="
echo ""

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${GREEN}‚úÖ Aplica√ß√£o criada com sucesso!${NC}"
echo -e "${GREEN}‚úÖ Medidas de seguran√ßa implementadas!${NC}"
echo ""

echo "üì± ACESSOS LOCAIS:"
echo "‚Ä¢ http://localhost:3001 (principal)"
echo "‚Ä¢ http://10.0.0.41:3001 (rede local)"
echo "‚Ä¢ http://localhost:3001/dashboard.html (monitoramento)"
echo ""

echo "üåê OP√á√ïES DE EXPOSI√á√ÉO P√öBLICA:"
echo ""

echo -e "${BLUE}1. NGROK (Recomendado para testes)${NC}"
echo "   ‚Ä¢ Mais f√°cil e r√°pido"
echo "   ‚Ä¢ HTTPS autom√°tico"
echo "   ‚Ä¢ Ideal para demonstra√ß√µes"
echo ""
echo "   Como usar:"
echo "   1. Obter token em: https://dashboard.ngrok.com/get-started/your-authtoken"
echo "   2. Executar: ./ngrok config add-authtoken SEU_TOKEN"
echo "   3. Executar: ./start-public.sh"
echo ""

echo -e "${BLUE}2. CLOUDFLARE TUNNEL (Gratuito)${NC}"
echo "   ‚Ä¢ Completamente gratuito"
echo "   ‚Ä¢ Muito seguro"
echo "   ‚Ä¢ Prote√ß√£o DDoS inclu√≠da"
echo ""
echo "   Como usar:"
echo "   1. Instalar: brew install cloudflared"
echo "   2. Executar: cloudflared tunnel --url http://localhost:3001"
echo ""

echo -e "${BLUE}3. PORT FORWARDING (Roteador)${NC}"
echo "   ‚Ä¢ Sem depend√™ncias externas"
echo "   ‚Ä¢ Velocidade m√°xima"
echo "   ‚Ä¢ Requer configura√ß√£o manual"
echo ""
echo "   Como configurar:"
echo "   1. Acessar: http://192.168.1.1 (painel do roteador)"
echo "   2. Procurar: Port Forwarding"
echo "   3. Criar regra: Porta 3001 ‚Üí 10.0.0.41:3001"
echo "   4. Acessar: http://$(curl -s http://ipecho.net/plain):3001"
echo ""

echo -e "${BLUE}4. SERVIDOR VPS (Produ√ß√£o)${NC}"
echo "   ‚Ä¢ M√°xima seguran√ßa"
echo "   ‚Ä¢ Dom√≠nio pr√≥prio"
echo "   ‚Ä¢ SSL/TLS autom√°tico"
echo ""
echo "   Provedores sugeridos:"
echo "   ‚Ä¢ DigitalOcean (a partir de \$5/m√™s)"
echo "   ‚Ä¢ AWS Lightsail (a partir de \$3.50/m√™s)"
echo "   ‚Ä¢ Google Cloud (cr√©dito gratuito)"
echo ""

echo -e "${YELLOW}üîí SEGURAN√áA IMPLEMENTADA:${NC}"
echo "‚Ä¢ Rate limiting (5 tentativas/15min)"
echo "‚Ä¢ Valida√ß√£o e sanitiza√ß√£o de dados"
echo "‚Ä¢ Headers de seguran√ßa (Helmet)"
echo "‚Ä¢ Logs de auditoria completos"
echo "‚Ä¢ Prote√ß√£o contra XSS e ataques"
echo "‚Ä¢ Valida√ß√£o de origem"
echo ""

echo -e "${YELLOW}üìä MONITORAMENTO:${NC}"
echo "‚Ä¢ Dashboard: http://localhost:3001/dashboard.html"
echo "‚Ä¢ Logs em tempo real"
echo "‚Ä¢ Estat√≠sticas de uso"
echo "‚Ä¢ Status do WhatsApp"
echo ""

echo -e "${RED}‚ö†Ô∏è  IMPORTANTE:${NC}"
echo "‚Ä¢ Sempre monitore os logs"
echo "‚Ä¢ Mantenha backups regulares"
echo "‚Ä¢ Use HTTPS em produ√ß√£o"
echo "‚Ä¢ Configure alertas para tentativas suspeitas"
echo ""

echo "üöÄ PR√ìXIMOS PASSOS:"
echo "1. Escolher m√©todo de exposi√ß√£o"
echo "2. Configurar URL p√∫blica"
echo "3. Testar envios"
echo "4. Configurar monitoramento"
echo ""

echo "üìö DOCUMENTA√á√ÉO:"
echo "‚Ä¢ SECURITY_GUIDE.md - Guia completo de seguran√ßa"
echo "‚Ä¢ EXPOSICAO_PUBLICA.md - Detalhes t√©cnicos"
echo "‚Ä¢ README.md - Instru√ß√µes b√°sicas"
echo ""

echo -e "${GREEN}üéâ Sua aplica√ß√£o est√° pronta para uso p√∫blico seguro!${NC}"
echo ""

read -p "Deseja iniciar a exposi√ß√£o p√∫blica agora? (y/n): " answer
if [[ $answer == "y" || $answer == "Y" ]]; then
    echo ""
    echo "Escolha o m√©todo:"
    echo "1. ngrok (recomendado)"
    echo "2. Cloudflare Tunnel"
    read -p "Digite sua op√ß√£o (1-2): " method
    
    case $method in
        1)
            echo "Iniciando ngrok..."
            if [ -f "./ngrok" ]; then
                ./start-public.sh
            else
                echo "ngrok n√£o encontrado. Execute primeiro:"
                echo "curl -Lo ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-darwin-amd64.zip && unzip ngrok.zip"
            fi
            ;;
        2)
            echo "Iniciando Cloudflare Tunnel..."
            if command -v cloudflared &> /dev/null; then
                cloudflared tunnel --url http://localhost:3001
            else
                echo "Cloudflared n√£o encontrado. Execute primeiro:"
                echo "brew install cloudflared"
            fi
            ;;
        *)
            echo "Op√ß√£o inv√°lida"
            ;;
    esac
else
    echo "Configura√ß√£o conclu√≠da. Execute ./start-public.sh quando estiver pronto."
fi
