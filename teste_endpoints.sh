#!/bin/bash

echo "üß™ Testando endpoints da aplica√ß√£o em produ√ß√£o..."
echo

# Teste 1: Verificar se o servidor est√° ativo
echo "1Ô∏è‚É£ Testando se o servidor est√° ativo..."
response=$(curl -s -o /dev/null -w "%{http_code}" https://festa-julina-2025.onrender.com)
if [ "$response" -eq 200 ]; then
    echo "‚úÖ Servidor ativo (HTTP $response)"
else
    echo "‚ùå Servidor com problema (HTTP $response)"
fi

echo

# Teste 2: Verificar autentica√ß√£o do admin
echo "2Ô∏è‚É£ Testando autentica√ß√£o do admin..."
response=$(curl -s -o /dev/null -w "%{http_code}" https://festa-julina-2025.onrender.com/admin.html)
if [ "$response" -eq 401 ]; then
    echo "‚úÖ Autentica√ß√£o funcionando (HTTP $response)"
else
    echo "‚ùå Autentica√ß√£o com problema (HTTP $response)"
fi

echo

# Teste 3: Verificar acesso com credenciais
echo "3Ô∏è‚É£ Testando acesso com credenciais..."
response=$(curl -s -o /dev/null -w "%{http_code}" -u "admin:Felicidade2020!" https://festa-julina-2025.onrender.com/admin.html)
if [ "$response" -eq 200 ]; then
    echo "‚úÖ Acesso com credenciais funcionando (HTTP $response)"
else
    echo "‚ùå Acesso com credenciais com problema (HTTP $response)"
fi

echo

# Teste 4: Verificar endpoint de dados
echo "4Ô∏è‚É£ Testando endpoint de dados..."
data=$(curl -s -u "admin:Felicidade2020!" https://festa-julina-2025.onrender.com/dados)
total=$(echo "$data" | jq -r '.total' 2>/dev/null)
if [ "$total" != "null" ] && [ "$total" != "" ]; then
    echo "‚úÖ Endpoint de dados funcionando (Total: $total)"
else
    echo "‚ùå Endpoint de dados com problema"
    echo "Resposta: $data"
fi

echo

# Teste 5: Verificar endpoint de download
echo "5Ô∏è‚É£ Testando endpoint de download..."
response=$(curl -s -o /dev/null -w "%{http_code}" -u "admin:Felicidade2020!" https://festa-julina-2025.onrender.com/download)
if [ "$response" -eq 200 ]; then
    echo "‚úÖ Endpoint de download funcionando (HTTP $response)"
else
    echo "‚ùå Endpoint de download com problema (HTTP $response)"
fi

echo
echo "üéâ Testes conclu√≠dos!"
